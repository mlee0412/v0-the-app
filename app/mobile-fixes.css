/* File: billiards-timer (31)/app/mobile-fixes.css */
/* Mobile-specific fixes */

/* Fix for iOS Safari 100vh issue */
@supports (-webkit-touch-callout: none) {
  .h-screen {
    height: -webkit-fill-available;
  }

  .mobile-container {
    height: -webkit-fill-available;
  }

  /* Updated .mobile-scroll-container height for iOS, removed !important */
  .mobile-scroll-container {
    height: calc(var(--vh, 1vh) * 100 - 120px); /* Adjust 120px based on actual header/footer heights */
    /* padding-bottom was here, now handled below consistently */
  }
}

/* Enhanced space-themed bottom navigation - Styles from here seem to be for .mobile-bottom-nav itself, not the scroll container */
.mobile-bottom-nav {
  display: flex;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 10, 30, 0.85);
  border-top: 1px solid rgba(0, 255, 255, 0.4);
  padding: 10px 8px;
  padding-bottom: calc(10px + env(safe-area-inset-bottom, 0px)); /* This handles safe area for the nav itself */
  z-index: 50;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  box-shadow: 0 -4px 20px rgba(0, 200, 255, 0.2);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  justify-content: space-around;
}

.mobile-bottom-nav::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Edge */
}

.mobile-bottom-nav-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 6px 12px;
  min-width: 70px;
  color: rgba(160, 160, 200, 0.7);
  border: none;
  background: transparent;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  -webkit-tap-highlight-color: transparent; /* Moved from a more global rule for clarity */
  touch-action: manipulation;
}

.mobile-bottom-nav-item:active {
  opacity: 0.7;
}

.mobile-bottom-nav-item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, #00ffff, #ff00ff);
  transition: all 0.3s ease;
  transform: translateX(-50%);
  opacity: 0;
}

.mobile-bottom-nav-item.active {
  color: #00ffff;
  text-shadow: 0 0 8px rgba(0, 255, 255, 0.5);
}

.mobile-bottom-nav-item.active::before {
  width: 70%;
  opacity: 1;
}

.mobile-bottom-nav-icon {
  margin-bottom: 4px;
  filter: drop-shadow(0 0 2px rgba(0, 200, 255, 0.3));
  transition: all 0.3s ease;
}

.mobile-bottom-nav-item.active .mobile-bottom-nav-icon {
  filter: drop-shadow(0 0 5px rgba(0, 255, 255, 0.7));
  transform: scale(1.1);
}

.mobile-bottom-nav-label {
  font-size: 11px;
  font-weight: 500;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
  white-space: nowrap;
}

/* Floating action button */
.mobile-fab {
  position: fixed;
  bottom: 80px; /* This might need adjustment depending on final nav height */
  right: 20px;
  width: 60px;
  height: 60px;
  border-radius: 30px;
  background: linear-gradient(135deg, #00ffff, #ff00ff);
  color: #000;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.6), 0 0 30px rgba(255, 0, 255, 0.3);
  border: none;
  z-index: 100;
  font-size: 28px;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.mobile-fab:active {
  transform: scale(0.9) rotate(5deg);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.8), 0 0 20px rgba(255, 0, 255, 0.4);
}

.plus-icon {
  background: linear-gradient(135deg, #fff, #a0f0ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

/* Touch feedback */
.touch-feedback {
  position: relative;
  overflow: hidden;
  transition: transform 0.2s;
}

.touch-feedback:active {
  transform: scale(0.95);
}

.touch-feedback::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(0, 255, 255, 0.7);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1) translate(-50%, -50%);
  pointer-events: none;
}

.touch-feedback:active::after {
  animation: touch-ripple 0.6s ease-out;
}

@keyframes touch-ripple {
  0% {
    transform: scale(0) translate(-50%, -50%);
    opacity: 0.5;
  }
  100% {
    transform: scale(20) translate(-50%, -50%);
    opacity: 0;
  }
}

/* Special styling for action buttons */
.mobile-bottom-nav-item .text-red-500 {
  color: #ff5555;
  text-shadow: 0 0 8px rgba(255, 0, 0, 0.5);
}

.mobile-bottom-nav-item .text-green-500 {
  color: #55ff7f;
  text-shadow: 0 0 8px rgba(0, 255, 0, 0.5);
}

/* Improved iOS scrolling */
.ios-touch-fix { /* This class seems for general iOS touch improvements, not specific to scroll container */
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

/* Standardized mobile scroll container styling */
.mobile-scroll-container {
  -webkit-overflow-scrolling: touch; /* For momentum scrolling on iOS */
  overflow-y: auto; /* Enable vertical scrolling */
  flex: 1; /* Allow it to take available space in a flex container */
  /* Consistent padding at the bottom to ensure content isn't hidden behind nav/FAB */
  /* Adjust 70px based on the actual height of your bottom navigation + any FAB that might be above it */
  padding-bottom: calc(70px + env(safe-area-inset-bottom, 0px));
}


/* Ensure content is scrollable on iOS (already somewhat covered by .mobile-scroll-container general rules) */
/* .mobile-scroll-container {
  height: calc(100vh - 120px); 
  height: calc(var(--vh, 1vh) * 100 - 120px); 
  overflow-y: auto;
  position: relative; 
  z-index: 1;
  padding-bottom: 80px; 
} */
/* The above rule for .mobile-scroll-container was very specific and might conflict. 
   The simplified padding-bottom rule in the new .mobile-scroll-container definition should be more robust.
   If you find specific height constraints are needed, you might re-introduce it carefully.
*/


/* Fix for iOS momentum scrolling - this can be applied to specific scrollable areas if needed */
.ios-momentum-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: scroll; /* or auto */
  touch-action: pan-y; /* Allow vertical panning, can help with scroll hijacking issues */
  overscroll-behavior-y: contain; /* Prevent pull-to-refresh on the element, but not globally */
}

/* Improved touch targets for mobile - this is good, but often handled by component libraries or more specific selectors */
/* .mobile-touch-target {
  min-height: 44px; 
} */

/* Prevent text selection on mobile */
.no-text-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

/* Safe zone for iOS devices with notches - good for global padding on main containers */
.touch-safe-zone {
  padding-left: env(safe-area-inset-left, 0px); /* Added fallback */
  padding-right: env(safe-area-inset-right, 0px); /* Added fallback */
  padding-bottom: env(safe-area-inset-bottom, 20px); /* Added fallback, though might conflict with specific bottom nav padding */
}

/* Pull to refresh indicator - these styles seem fine */
.pull-refresh-indicator {
  position: absolute; /* Changed from fixed to be relative to scroll container if used within one */
  top: 0;
  left: 0;
  right: 0;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.7);
  color: #00ffff;
  font-size: 14px;
  transform: translateY(-100%);
  transition: transform 0.3s ease;
  z-index: 100; /* Ensure it's above content but below fixed headers */
  pointer-events: none;
  opacity: 0;
}

.pull-refresh-indicator.visible {
  transform: translateY(0);
  opacity: 1; /* Make it visible when class is added */
}

.pull-refresh-spinner {
  margin-right: 8px;
  color: #00ffff;
}

/* Improved scrolling for iOS (coarse pointer media query) */
@media (pointer: coarse) {
  .improved-scroll {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
  }

  .improved-scroll::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Edge */
  }

  /* Landscape mode grid layout */
  .landscape-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 16px;
  }
}

/* Space-themed open button */
.space-open-button {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(0, 0, 30, 0.7);
  border: 1px solid rgba(0, 255, 255, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
  transition: all 0.2s ease;
}

.space-open-button:active {
  transform: translate(-50%, -50%) scale(0.9); /* Check if this transform is intended for all use cases */
  box-shadow: 0 0 8px rgba(0, 255, 255, 0.8);
}

/* Fix for iOS viewport height issues */
:root {
  --vh: 1vh;
}

/* Add this new class for safe area bottom padding - if needed for specific elements */
.safe-area-bottom {
  padding-bottom: calc(8px + env(safe-area-inset-bottom, 0px));
}

/* Use the custom vh variable for height calculations */
.min-h-screen {
  min-height: 100vh; /* Fallback */
  min-height: calc(var(--vh, 1vh) * 100);
}

.h-screen {
  height: 100vh; /* Fallback */
  height: calc(var(--vh, 1vh) * 100);
}

/* Fix for iOS scrolling issues (General class for iOS devices) */
.ios-device {
  /* touch-action: manipulation; This might be too broad */
  -webkit-overflow-scrolling: touch;
}

/* Enable scrolling in containers (already defined in .mobile-scroll-container) */
/* .overflow-y-auto,
.overflow-auto {
  -webkit-overflow-scrolling: touch;
  overscroll-behavior-y: contain; 
} */


/* Fix for iOS touch handling (can be applied to specific elements) */
/* .ios-touch-fix {
  touch-action: manipulation;
} */

/* Fix for table card server info - Z-index can be tricky, ensure it's necessary */
.table-card .server-info {
  z-index: 5; /* Ensure this doesn't conflict with swipe action layers or other popups */
  position: relative;
}

/* Ensure action buttons don't overlap */
.swipeable-action-left,
.swipeable-action-right {
  z-index: 10; /* If SwipeableTableCard uses z-index, ensure consistency */
}

.swipeable-card-content {
  z-index: 20; /* Must be above action indicators */
}

/* Fix for swipeable cards */
.table-card-container {
  touch-action: pan-y; /* Good for allowing vertical scroll on parent */
  -webkit-user-select: none;
  user-select: none;
  position: relative; /* Needed for z-index stacking context if children use z-index */
  /* z-index: 1; This might conflict if multiple cards are stacked or have overlapping popups */
}


/* Table card container needs more bottom margin on mobile */
@media (max-width: 768px) {
  .table-card-container {
    margin-bottom: 16px; /* Standard spacing for cards */
  }

  /* This rule was very broad, moved padding to .mobile-scroll-container */
  /* .mobile-scroll-container > div:last-child {
    margin-bottom: 120px; 
  } */
}


/* Add cosmic glow to active nav items */
@keyframes cosmic-pulse {
  0% {
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
  }
  50% {
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.6), 0 0 15px rgba(255, 0, 255, 0.3);
  }
  100% {
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
  }
}

.mobile-bottom-nav-item.active {
  animation: cosmic-pulse 3s infinite; /* This animation might be a bit much for an "active" state, consider subtle glow */
}


/* Fix for iPhone notch models */
@media (max-height: 812px) and (max-width: 375px) { /* iPhone X/XS/11 Pro/12 Mini/13 Mini */
  .mobile-bottom-nav {
    padding: 6px 0;
    padding-bottom: calc(6px + env(safe-area-inset-bottom, 0px));
  }

  .mobile-bottom-nav-item {
    min-width: 50px; /* Adjust as needed */
  }
}

/* Fix for iPhone Plus/Max models */
@media (min-width: 414px) and (max-width: 428px) { /* iPhone Plus/Max sizes */
  .mobile-bottom-nav-item {
    min-width: 65px; /* Adjust as needed */
    max-width: 85px;
  }
}

/* Ensure content doesn't get hidden behind the nav (This is a more robust general approach) */
/* .table-card-container:last-child {
  margin-bottom: calc(80px + env(safe-area-inset-bottom, 20px));
} */
/* The above is handled by padding-bottom on .mobile-scroll-container now */


/* Fix for the bottom nav on rotation */
@media (orientation: landscape) {
  .mobile-bottom-nav {
    padding-bottom: calc(5px + env(safe-area-inset-bottom, 0px));
    min-height: 50px; /* Ensure it doesn't get too squished */
  }

  .mobile-bottom-nav-label {
    font-size: 9px; /* Smaller labels in landscape */
  }
}

/* Ensure buttons have proper touch behavior */
button {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation; /* Good for custom buttons */
}

/* Fix for iOS touch delay (Applied more broadly but might be needed for specific elements) */
/* @media (pointer: coarse) {
  .mobile-bottom-nav-item,
  button,
  [role="button"] {
    cursor: pointer; 
    touch-action: manipulation;
  }
} */
/* The global button rule above should cover most of this. */


/* -------------------------------------------------------------------------- */
/* Mobile Table Card Layout Fixes */
/* -------------------------------------------------------------------------- */

.mobile-table-card-list .table-card-container {
  display: flex; 
  flex-direction: column;
  margin-bottom: 16px; 
}

.mobile-table-card-list .table-card {
  display: flex;
  flex-direction: column;
  flex-grow: 1; 
  min-height: 180px; 
  /* Removed fixed min-height to allow content to define height more naturally, 
     as long as TableCard internals are well-structured.
     If cards look uneven, a consistent min-height can be reinstated or content balanced.
  */
}

.table-card > div:first-child { /* Assuming this is the main wrapper inside TableCard from shadcn/ui <Card> */
  display: flex;
  flex-direction: column;
  height: 100%; /* Ensure it fills the .table-card flex item */
}

.table-card .mt-auto { 
  margin-top: auto; /* Keep footer at bottom */
}

.table-card .truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
